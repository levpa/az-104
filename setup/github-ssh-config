# create and generate ssh key:
mkdir ~/.ssh && cd ~/.ssh
ssh-keygen -t rsa -b 4096 -f <key_filename> -C <your_email@example.com>

# add config to ~/.ssh/config
Host github.com
        User levpa
        Hostname github.com
        PreferredAuthentications publickey
        IdentityFile ~/.ssh/github 

# add your identity to git config
  git config --global user.email "name.surname@example.com"
  git config --global user.name "Name Surname"

# generate new gpg key for signature verification with your 'Name Surname' and 'name.surname@example.email'
gpg --default-new-key-algo rsa4096 --gen-key

# print keys
gpg --list-secret-keys --keyid-format=long

/c/Users/levpa/.gnupg/pubring.kbx
---------------------------------
sec   rsa4096/xxxxxxxxxxxxx 2023-05-08 [SC] [expires: 2025-05-07]
      YYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYY
uid                 [ultimate] Lev Pasichnyi <lev.pasichnyi@gmail.com>

# sustitute xxxxxxxxxxxxxxxxx part to next command:
gpg --armor --export xxxxxxxxxxxxxxx

# copy and past printed block to new GitHub GPG key

# to sign all commits from your laptop, set:
git config --global commit.gpgsign true

# try to commit with 'git commit -m "my commit"' use passphrase for sign identity
# do 'git push', check verify status on commit in GitHub

# add [aliases] block from .gitconfig file to ~/.gitconfig with command: 'git config --global -e'
# check new functionality:
git ac " commit and publish new code "
